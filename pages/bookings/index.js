import React, {useState, useEffect} from 'react'
import { getSession } from 'next-auth/react'
import axios from 'axios'
import { convertToLocal } from '../../utils/timezoneCorrections'
import Layout from '../../components/layout/Layout'
import CustomTable from '../../components/CustomTable'
import Link from 'next/link'
import easyinvoice from 'easyinvoice';






const BookingsPage = () => {

    const [loading, setLoading] = useState(true)
    const [bookings, setBookings] = useState([])

    useEffect(()=>{
        (async ()=>{

            const {data} = await axios.get('/api/bookings')

            setBookings(data.bookings)

            setLoading(false)

        })()
    }, [])

    const downloadInvoice = async(booking) => {
        const data = {
            "documentTitle": "Booking Invoice",
            "currency": "USD",
            "marginTop": 25,
            "marginRight": 25,
            "marginLeft": 25,
            "marginBottom": 25,
            "images": {
                "logo": "https://res.cloudinary.com/fsdm/image/upload/v1641758606/astral/logos/invoice-logo_cdmsol.png", 
            },
            "sender": {
              "company": "Astral - Destinations",
              "address": "Sample Street 123",
              "zip": "1234 AB",
              "city": "Sampletown",
              "country": "Samplecountry"
            },
            "client": {
              "company": `${booking.user.name}`,
              "address":  `${booking.user.email}`,
              "zip": `Check In: ${convertToLocal(new Date(booking.checkInDate)).toDateString()}`,
              "city": "",
              "country": `Check Out: ${convertToLocal(new Date(booking.checkOutDate)).toDateString()}`,
            //   "city":  `Check In: ${new Date(booking.checkInDate).toLocaleString('en-US')}`,
            //   "country": `Check Out: ${new Date(booking.checkOutDate).toLocaleString('en-US')}`,
              "Check In": `Check In: ${convertToLocal(new Date(booking.checkInDate)).toDateString()}`
            },
            "information": {
                "number": `${booking._id}`,
                "date": `${new Date(Date.now()).toDateString()}`,
                "due-date": `Upon Check In: ${convertToLocal(new Date(booking.checkInDate)).toDateString()}`
            },
            "products": [
              {
                "quantity": `${booking.daysOfStay}`,
                "description": `${booking.destination.name}`,
                "tax-rate": 0,
                "price": booking.destination.pricePerNight
              },
            ],
            "bottomNotice": "This is an autogenerated invoice for your booking."
          }

        const result = await easyinvoice.createInvoice(data)
        easyinvoice.download(`invoice_${booking._id}.pdf`, result.pdf)
    }


    return (
        <Layout title="My Bookings">
        <section className="container my-32">
            <h1 className='text-center'>My Bookings</h1>
            {loading ? 
                <div>
                    <p>Loading...</p>
                </div>
            : 
            <div>
                <CustomTable 
                    columns={[
                        {
                            title: "Check In",
                            selector: row => convertToLocal(new Date(row.checkInDate)).toDateString()
                        },
                        {
                            title: "Check Out",
                            selector: row => convertToLocal(new Date(row.checkOutDate)).toDateString()
                        },
                        {
                            title: "Days Of Stay",
                            selector: row => row.daysOfStay
                        },
                        {
                            title: "Total Billed",
                            selector: row => `$${row.amountPaid * row.daysOfStay}`
                        },
                        {
                            title: "",
                            selector: row => (
                                <>
                                <Link href={`/bookings/${row._id}`}>
                                    <a className="inline-block mr-4 my-4">Details</a>
                                </Link>
                                <button onClick={() => downloadInvoice(row)} className="underline">Download</button>
                                </>
                            )
                        },

                    ]}
                    rows={bookings}
                />
            </div>
            }
        </section>
  
        </Layout>
    )
}

export default BookingsPage


export async function getServerSideProps(context){

    const session = await getSession({req: context.req})
    
    if(!session){
        return {
            redirect: {
                destination: '/',
                permanent: false
            }
        }
    }

    return {
        props: {}
    }
}